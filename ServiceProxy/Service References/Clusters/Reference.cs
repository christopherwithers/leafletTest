//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceProxy.Clusters {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FacilityEntryCollection", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts", ItemName="FacilityEntry")]
    [System.SerializableAttribute()]
    public class FacilityEntryCollection : System.Collections.Generic.List<ServiceProxy.Clusters.FacilityEntry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilityEntry", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceProxy.Clusters.FacilityDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceProxy.Clusters.ClusterDetail))]
    public partial class FacilityEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryAsTaxonomyIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] CoordinatesArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityImageFullUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityLocationAsTaxonomyIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityWebPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildingId {
            get {
                return this.BuildingIdField;
            }
            set {
                if ((this.BuildingIdField.Equals(value) != true)) {
                    this.BuildingIdField = value;
                    this.RaisePropertyChanged("BuildingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryAsTaxonomyIds {
            get {
                return this.CategoryAsTaxonomyIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryAsTaxonomyIdsField, value) != true)) {
                    this.CategoryAsTaxonomyIdsField = value;
                    this.RaisePropertyChanged("CategoryAsTaxonomyIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((this.ContentIdField.Equals(value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] CoordinatesArray {
            get {
                return this.CoordinatesArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinatesArrayField, value) != true)) {
                    this.CoordinatesArrayField = value;
                    this.RaisePropertyChanged("CoordinatesArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityImageFullUrl {
            get {
                return this.FacilityImageFullUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityImageFullUrlField, value) != true)) {
                    this.FacilityImageFullUrlField = value;
                    this.RaisePropertyChanged("FacilityImageFullUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityLocationAsTaxonomyIds {
            get {
                return this.FacilityLocationAsTaxonomyIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityLocationAsTaxonomyIdsField, value) != true)) {
                    this.FacilityLocationAsTaxonomyIdsField = value;
                    this.RaisePropertyChanged("FacilityLocationAsTaxonomyIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityWebPage {
            get {
                return this.FacilityWebPageField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityWebPageField, value) != true)) {
                    this.FacilityWebPageField = value;
                    this.RaisePropertyChanged("FacilityWebPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilityDetail", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceProxy.Clusters.ClusterDetail))]
    public partial class FacilityDetail : ServiceProxy.Clusters.FacilityEntry {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PcAvailabilityClusterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PcAvailabilityCluster {
            get {
                return this.PcAvailabilityClusterField;
            }
            set {
                if ((this.PcAvailabilityClusterField.Equals(value) != true)) {
                    this.PcAvailabilityClusterField = value;
                    this.RaisePropertyChanged("PcAvailabilityCluster");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClusterDetail", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ClusterDetail : ServiceProxy.Clusters.FacilityDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfPcsFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RbRoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RoomBookedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DistanceTo {
            get {
                return this.DistanceToField;
            }
            set {
                if ((this.DistanceToField.Equals(value) != true)) {
                    this.DistanceToField = value;
                    this.RaisePropertyChanged("DistanceTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfPcsFree {
            get {
                return this.NoOfPcsFreeField;
            }
            set {
                if ((this.NoOfPcsFreeField.Equals(value) != true)) {
                    this.NoOfPcsFreeField = value;
                    this.RaisePropertyChanged("NoOfPcsFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RbRoomId {
            get {
                return this.RbRoomIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RbRoomIdField, value) != true)) {
                    this.RbRoomIdField = value;
                    this.RaisePropertyChanged("RbRoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RoomBooked {
            get {
                return this.RoomBookedField;
            }
            set {
                if ((this.RoomBookedField.Equals(value) != true)) {
                    this.RoomBookedField = value;
                    this.RaisePropertyChanged("RoomBooked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomIdField, value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MapEntryCollection", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts", ItemName="MapEntry")]
    [System.SerializableAttribute()]
    public class MapEntryCollection : System.Collections.Generic.List<ServiceProxy.Clusters.MapEntry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapEntry", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MapEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NorthEastLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NorthEastLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SouthWestLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SouthWestLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxonomyKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((this.ContentIdField.Equals(value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultMap {
            get {
                return this.DefaultMapField;
            }
            set {
                if ((this.DefaultMapField.Equals(value) != true)) {
                    this.DefaultMapField = value;
                    this.RaisePropertyChanged("DefaultMap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapName {
            get {
                return this.MapNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MapNameField, value) != true)) {
                    this.MapNameField = value;
                    this.RaisePropertyChanged("MapName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NorthEastLatitude {
            get {
                return this.NorthEastLatitudeField;
            }
            set {
                if ((this.NorthEastLatitudeField.Equals(value) != true)) {
                    this.NorthEastLatitudeField = value;
                    this.RaisePropertyChanged("NorthEastLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NorthEastLongitude {
            get {
                return this.NorthEastLongitudeField;
            }
            set {
                if ((this.NorthEastLongitudeField.Equals(value) != true)) {
                    this.NorthEastLongitudeField = value;
                    this.RaisePropertyChanged("NorthEastLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SouthWestLatitude {
            get {
                return this.SouthWestLatitudeField;
            }
            set {
                if ((this.SouthWestLatitudeField.Equals(value) != true)) {
                    this.SouthWestLatitudeField = value;
                    this.RaisePropertyChanged("SouthWestLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SouthWestLongitude {
            get {
                return this.SouthWestLongitudeField;
            }
            set {
                if ((this.SouthWestLongitudeField.Equals(value) != true)) {
                    this.SouthWestLongitudeField = value;
                    this.RaisePropertyChanged("SouthWestLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonomyKey {
            get {
                return this.TaxonomyKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonomyKeyField, value) != true)) {
                    this.TaxonomyKeyField = value;
                    this.RaisePropertyChanged("TaxonomyKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BuildingEntryCollection", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts", ItemName="BuildingEntry")]
    [System.SerializableAttribute()]
    public class BuildingEntryCollection : System.Collections.Generic.List<ServiceProxy.Clusters.BuildingEntry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildingEntry", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BuildingEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingImageFullUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryAsTaxonomyIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationAsTaxonomyIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] PolygonCoordinatesAsArrayListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingCode {
            get {
                return this.BuildingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingCodeField, value) != true)) {
                    this.BuildingCodeField = value;
                    this.RaisePropertyChanged("BuildingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingImageFullUrl {
            get {
                return this.BuildingImageFullUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingImageFullUrlField, value) != true)) {
                    this.BuildingImageFullUrlField = value;
                    this.RaisePropertyChanged("BuildingImageFullUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingName {
            get {
                return this.BuildingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNameField, value) != true)) {
                    this.BuildingNameField = value;
                    this.RaisePropertyChanged("BuildingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryAsTaxonomyIds {
            get {
                return this.CategoryAsTaxonomyIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryAsTaxonomyIdsField, value) != true)) {
                    this.CategoryAsTaxonomyIdsField = value;
                    this.RaisePropertyChanged("CategoryAsTaxonomyIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colour {
            get {
                return this.ColourField;
            }
            set {
                if ((object.ReferenceEquals(this.ColourField, value) != true)) {
                    this.ColourField = value;
                    this.RaisePropertyChanged("Colour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((this.ContentIdField.Equals(value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationAsTaxonomyIds {
            get {
                return this.LocationAsTaxonomyIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationAsTaxonomyIdsField, value) != true)) {
                    this.LocationAsTaxonomyIdsField = value;
                    this.RaisePropertyChanged("LocationAsTaxonomyIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] PolygonCoordinatesAsArrayList {
            get {
                return this.PolygonCoordinatesAsArrayListField;
            }
            set {
                if ((object.ReferenceEquals(this.PolygonCoordinatesAsArrayListField, value) != true)) {
                    this.PolygonCoordinatesAsArrayListField = value;
                    this.RaisePropertyChanged("PolygonCoordinatesAsArrayList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ClusterCollection", Namespace="http://schemas.datacontract.org/2004/07/UniBirmingham.Web.Services.DataContracts", ItemName="ClusterDetail")]
    [System.SerializableAttribute()]
    public class ClusterCollection : System.Collections.Generic.List<ServiceProxy.Clusters.ClusterDetail> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Clusters.IClusters")]
    public interface IClusters {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetClusters", ReplyAction="http://tempuri.org/IClusters/GetClustersResponse")]
        ServiceProxy.Clusters.GetClustersResponse GetClusters(ServiceProxy.Clusters.GetClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetClusters", ReplyAction="http://tempuri.org/IClusters/GetClustersResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetClustersResponse> GetClustersAsync(ServiceProxy.Clusters.GetClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetMapsWithClusters", ReplyAction="http://tempuri.org/IClusters/GetMapsWithClustersResponse")]
        ServiceProxy.Clusters.GetMapsWithClustersResponse GetMapsWithClusters(ServiceProxy.Clusters.GetMapsWithClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetMapsWithClusters", ReplyAction="http://tempuri.org/IClusters/GetMapsWithClustersResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetMapsWithClustersResponse> GetMapsWithClustersAsync(ServiceProxy.Clusters.GetMapsWithClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetBuildingsWithClusters", ReplyAction="http://tempuri.org/IClusters/GetBuildingsWithClustersResponse")]
        ServiceProxy.Clusters.GetBuildingsWithClustersResponse GetBuildingsWithClusters(ServiceProxy.Clusters.GetBuildingsWithClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetBuildingsWithClusters", ReplyAction="http://tempuri.org/IClusters/GetBuildingsWithClustersResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetBuildingsWithClustersResponse> GetBuildingsWithClustersAsync(ServiceProxy.Clusters.GetBuildingsWithClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetClustersForBuildingOrderedAlphabetically", ReplyAction="http://tempuri.org/IClusters/GetClustersForBuildingOrderedAlphabeticallyResponse")]
        ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyResponse GetClustersForBuildingOrderedAlphabetically(ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetClustersForBuildingOrderedAlphabetically", ReplyAction="http://tempuri.org/IClusters/GetClustersForBuildingOrderedAlphabeticallyResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyResponse> GetClustersForBuildingOrderedAlphabeticallyAsync(ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetNearestClusters", ReplyAction="http://tempuri.org/IClusters/GetNearestClustersResponse")]
        ServiceProxy.Clusters.GetNearestClustersResponse GetNearestClusters(ServiceProxy.Clusters.GetNearestClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetNearestClusters", ReplyAction="http://tempuri.org/IClusters/GetNearestClustersResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetNearestClustersResponse> GetNearestClustersAsync(ServiceProxy.Clusters.GetNearestClustersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetNearestClustersWithPcData", ReplyAction="http://tempuri.org/IClusters/GetNearestClustersWithPcDataResponse")]
        ServiceProxy.Clusters.GetNearestClustersWithPcDataResponse GetNearestClustersWithPcData(ServiceProxy.Clusters.GetNearestClustersWithPcDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClusters/GetNearestClustersWithPcData", ReplyAction="http://tempuri.org/IClusters/GetNearestClustersWithPcDataResponse")]
        System.Threading.Tasks.Task<ServiceProxy.Clusters.GetNearestClustersWithPcDataResponse> GetNearestClustersWithPcDataAsync(ServiceProxy.Clusters.GetNearestClustersWithPcDataRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClusters", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetClustersRequest {
        
        public GetClustersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClustersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetClustersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.FacilityEntryCollection GetClustersResult;
        
        public GetClustersResponse() {
        }
        
        public GetClustersResponse(ServiceProxy.Clusters.FacilityEntryCollection GetClustersResult) {
            this.GetClustersResult = GetClustersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMapsWithClusters", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMapsWithClustersRequest {
        
        public GetMapsWithClustersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMapsWithClustersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMapsWithClustersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.MapEntryCollection GetMapsWithClustersResult;
        
        public GetMapsWithClustersResponse() {
        }
        
        public GetMapsWithClustersResponse(ServiceProxy.Clusters.MapEntryCollection GetMapsWithClustersResult) {
            this.GetMapsWithClustersResult = GetMapsWithClustersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBuildingsWithClusters", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBuildingsWithClustersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string mapId;
        
        public GetBuildingsWithClustersRequest() {
        }
        
        public GetBuildingsWithClustersRequest(string mapId) {
            this.mapId = mapId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBuildingsWithClustersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBuildingsWithClustersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.BuildingEntryCollection GetBuildingsWithClustersResult;
        
        public GetBuildingsWithClustersResponse() {
        }
        
        public GetBuildingsWithClustersResponse(ServiceProxy.Clusters.BuildingEntryCollection GetBuildingsWithClustersResult) {
            this.GetBuildingsWithClustersResult = GetBuildingsWithClustersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClustersForBuildingOrderedAlphabetically", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetClustersForBuildingOrderedAlphabeticallyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string buildingId;
        
        public GetClustersForBuildingOrderedAlphabeticallyRequest() {
        }
        
        public GetClustersForBuildingOrderedAlphabeticallyRequest(string buildingId) {
            this.buildingId = buildingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClustersForBuildingOrderedAlphabeticallyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetClustersForBuildingOrderedAlphabeticallyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.ClusterCollection GetClustersForBuildingOrderedAlphabeticallyResult;
        
        public GetClustersForBuildingOrderedAlphabeticallyResponse() {
        }
        
        public GetClustersForBuildingOrderedAlphabeticallyResponse(ServiceProxy.Clusters.ClusterCollection GetClustersForBuildingOrderedAlphabeticallyResult) {
            this.GetClustersForBuildingOrderedAlphabeticallyResult = GetClustersForBuildingOrderedAlphabeticallyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNearestClusters", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNearestClustersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string latitude;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string longitude;
        
        public GetNearestClustersRequest() {
        }
        
        public GetNearestClustersRequest(string latitude, string longitude) {
            this.latitude = latitude;
            this.longitude = longitude;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNearestClustersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNearestClustersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.ClusterCollection GetNearestClustersResult;
        
        public GetNearestClustersResponse() {
        }
        
        public GetNearestClustersResponse(ServiceProxy.Clusters.ClusterCollection GetNearestClustersResult) {
            this.GetNearestClustersResult = GetNearestClustersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNearestClustersWithPcData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNearestClustersWithPcDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string latitude;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string longitude;
        
        public GetNearestClustersWithPcDataRequest() {
        }
        
        public GetNearestClustersWithPcDataRequest(string latitude, string longitude) {
            this.latitude = latitude;
            this.longitude = longitude;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNearestClustersWithPcDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNearestClustersWithPcDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceProxy.Clusters.ClusterCollection GetNearestClustersWithPcDataResult;
        
        public GetNearestClustersWithPcDataResponse() {
        }
        
        public GetNearestClustersWithPcDataResponse(ServiceProxy.Clusters.ClusterCollection GetNearestClustersWithPcDataResult) {
            this.GetNearestClustersWithPcDataResult = GetNearestClustersWithPcDataResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClustersChannel : ServiceProxy.Clusters.IClusters, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClustersClient : System.ServiceModel.ClientBase<ServiceProxy.Clusters.IClusters>, ServiceProxy.Clusters.IClusters {
        
        public ClustersClient() {
        }
        
        public ClustersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClustersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClustersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClustersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceProxy.Clusters.GetClustersResponse GetClusters(ServiceProxy.Clusters.GetClustersRequest request) {
            return base.Channel.GetClusters(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetClustersResponse> GetClustersAsync(ServiceProxy.Clusters.GetClustersRequest request) {
            return base.Channel.GetClustersAsync(request);
        }
        
        public ServiceProxy.Clusters.GetMapsWithClustersResponse GetMapsWithClusters(ServiceProxy.Clusters.GetMapsWithClustersRequest request) {
            return base.Channel.GetMapsWithClusters(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetMapsWithClustersResponse> GetMapsWithClustersAsync(ServiceProxy.Clusters.GetMapsWithClustersRequest request) {
            return base.Channel.GetMapsWithClustersAsync(request);
        }
        
        public ServiceProxy.Clusters.GetBuildingsWithClustersResponse GetBuildingsWithClusters(ServiceProxy.Clusters.GetBuildingsWithClustersRequest request) {
            return base.Channel.GetBuildingsWithClusters(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetBuildingsWithClustersResponse> GetBuildingsWithClustersAsync(ServiceProxy.Clusters.GetBuildingsWithClustersRequest request) {
            return base.Channel.GetBuildingsWithClustersAsync(request);
        }
        
        public ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyResponse GetClustersForBuildingOrderedAlphabetically(ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyRequest request) {
            return base.Channel.GetClustersForBuildingOrderedAlphabetically(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyResponse> GetClustersForBuildingOrderedAlphabeticallyAsync(ServiceProxy.Clusters.GetClustersForBuildingOrderedAlphabeticallyRequest request) {
            return base.Channel.GetClustersForBuildingOrderedAlphabeticallyAsync(request);
        }
        
        public ServiceProxy.Clusters.GetNearestClustersResponse GetNearestClusters(ServiceProxy.Clusters.GetNearestClustersRequest request) {
            return base.Channel.GetNearestClusters(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetNearestClustersResponse> GetNearestClustersAsync(ServiceProxy.Clusters.GetNearestClustersRequest request) {
            return base.Channel.GetNearestClustersAsync(request);
        }
        
        public ServiceProxy.Clusters.GetNearestClustersWithPcDataResponse GetNearestClustersWithPcData(ServiceProxy.Clusters.GetNearestClustersWithPcDataRequest request) {
            return base.Channel.GetNearestClustersWithPcData(request);
        }
        
        public System.Threading.Tasks.Task<ServiceProxy.Clusters.GetNearestClustersWithPcDataResponse> GetNearestClustersWithPcDataAsync(ServiceProxy.Clusters.GetNearestClustersWithPcDataRequest request) {
            return base.Channel.GetNearestClustersWithPcDataAsync(request);
        }
    }
}
